knitr::opts_chunk$set(echo = TRUE)
This is a monkey ![](https://static.independent.co.uk/s3fs-public/styles/article_large/public/thumbnails/image/2017/09/12/11/naturo-monkey-selfie.jpg)
#This is a monkey ![](https://static.independent.co.uk/s3fs-public/styles/article_large/public/thumbnails/image/2017/09/12/11/naturo-monkey-selfie.jpg)
#This is a graph ![](DEG_heatmap.png)
plot(pressure)
head(pressure)
dim(pressure)
?kable
?include_graphics
library(shiny)
?renderPlot
renderPlot(plot(sample(1:100)))
?Knitr
?knitr
?render
librarry(rmarkdown)
library(rmarkdown)
getwd()
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("radix")
library(rmarkdown)
install.packages("radix")
library(rmarkdown)
library(rmarkdown)
library(leaflet)
install.packages('leaflet')
library(leaflet)
x = rnorm(1000)
plot(x)
knitr::opts_chunk$set(echo = TRUE)
x = rnorm(1000)
plot(x)
getwd()
shiny::runApp('~/Desktop/test_app')
runApp('~/Desktop/new_file')
getwd
getwd()
getwd()
getwd()
getwd()
getwd()
?pdflatex
library(rmarkdown)
?pdflatex
library(pdflatex)
library(markdown)
?pdflatex
??pdflatex
library(tinytex)
?pdflatex
shiny::runApp('~/Desktop/test')
?shinyApp
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
shinyApp(ui = ui, server = server,options = list(width = 200, height = 550))
x = shinyApp(ui = ui, server = server,options = list(width = 200, height = 550))
x
str(x)
str(x$options)
y = shinyApp(ui = ui, server = server)
str(y)
str(y$options)
?runApp
shinyApp(ui = ui, server = server,options = list(width = 800, height = 800))
getwd()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
getwd()
getwd()
